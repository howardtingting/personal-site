import React from 'react';
import PropTypes from 'prop-types'
import {useState,useEffect} from 'react'
import 'animate.css';
/*
<SimpleText
  content = {"Howard Ting"}
  xPos = {"50vw"}
  yPos = {"50vh"}
/>
*/
const SimpleText = (props) => {
  const content = props.content || 'Place Content Here';
  const width = props.width || 0;
  const height = props.height || 0;
  const bgWidth = props.bgWidth || '100%';
  const bgHeight = props.bgHeight || '100%';
  const color = props.color || 'white';
  const onHover = props.onHover ? props.onHover : (() => {});
  const onUnhover = props.onUnhover ? props.onUnhover : (() => {});
  const fontSize = props.fontSize || 1;
  const position = props.position || 'absolute';
  const top = props.top || '0';
  const bottom = props.bottom || '0';
  const right = props.right || '0';
  const left = props.left || '0';
  const opacity = props.opacity || '100%';
  const click = props.click || false;
  const cursor = click ? 'pointer' : 'auto';
  const onClick = props.onClick || (()=>{ console.log(`Clicked ${textContent}`) });
  const writingMode = props.writingMode || 'horizontal-tb';

  /* ANIMATION ELEMS */
  const animation = props.animation || 'fadeInRight';
  const animationDuration = props.animationDuration || 5;
  const animationDirection = props.animationDirection || 'normal';
  const animationIterationCount = props.animationIterationCount || 1;
  const animationDelay = props.animationDelay || 0;
  const onAnimationEnd = props.onAnimationEnd || (() => {});
  const style = {
    cursor: cursor,
    color: color,
    userSelect: 'none',
    fontSize: fontSize.toString() + 'em',
    position: position,
    opacity: opacity,
    animation: animation,
    animationDuration: animationDuration.toString() + 's',
    animationDirection: animationDirection,
    animationIterationCount: animationIterationCount,
    animationDelay: animationDelay.toString() + 's',
    writingMode: writingMode
  }
  if (top === '0') {
      if (bottom !== '0') { style.bottom = bottom }
      else { style.top = top }
  } else {
    style.top = top;
  }
  if (left === 0) {
      if (right !== 0) { style.right = right }
      else { style.left = left }
  } else {
      style.left = left;
  }
  return (
    <div style={{width:bgWidth, height:bgHeight, top:style.top, position:'absolute'}}
         onMouseEnter={onHover}
         onMouseLeave={onUnhover}
         onAnimationEnd={onAnimationEnd}>
      <span
        style={style}
        onClick={onClick}
        onAnimationEnd={onAnimationEnd}>{ textContent }</span>
    </div>
  )
}

SimpleText.defaultProps_ = {
  content: 'Place Content Here',
}

SimpleText.propTypes = {
  content: PropTypes.string, //.isRequired
}

export default SimpleText
